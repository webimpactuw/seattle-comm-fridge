{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.SanityImageUrlBuilder = factory());\n})(this, function () {\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o) {\n    var i = 0;\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    i = o[Symbol.iterator]();\n    return i.next.bind(i);\n  }\n  var example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\n  function parseAssetId(ref) {\n    var _ref$split = ref.split('-'),\n      id = _ref$split[1],\n      dimensionString = _ref$split[2],\n      format = _ref$split[3];\n    if (!id || !dimensionString || !format) {\n      throw new Error(\"Malformed asset _ref '\" + ref + \"'. Expected an id like \\\"\" + example + \"\\\".\");\n    }\n    var _dimensionString$spli = dimensionString.split('x'),\n      imgWidthStr = _dimensionString$spli[0],\n      imgHeightStr = _dimensionString$spli[1];\n    var width = +imgWidthStr;\n    var height = +imgHeightStr;\n    var isValidAssetId = isFinite(width) && isFinite(height);\n    if (!isValidAssetId) {\n      throw new Error(\"Malformed asset _ref '\" + ref + \"'. Expected an id like \\\"\" + example + \"\\\".\");\n    }\n    return {\n      id: id,\n      width: width,\n      height: height,\n      format: format\n    };\n  }\n  var isRef = function isRef(src) {\n    var source = src;\n    return source ? typeof source._ref === 'string' : false;\n  };\n  var isAsset = function isAsset(src) {\n    var source = src;\n    return source ? typeof source._id === 'string' : false;\n  };\n  var isAssetStub = function isAssetStub(src) {\n    var source = src;\n    return source && source.asset ? typeof source.asset.url === 'string' : false;\n  };\n  function parseSource(source) {\n    if (!source) {\n      return null;\n    }\n    var image;\n    if (typeof source === 'string' && isUrl(source)) {\n      image = {\n        asset: {\n          _ref: urlToId(source)\n        }\n      };\n    } else if (typeof source === 'string') {\n      image = {\n        asset: {\n          _ref: source\n        }\n      };\n    } else if (isRef(source)) {\n      image = {\n        asset: source\n      };\n    } else if (isAsset(source)) {\n      image = {\n        asset: {\n          _ref: source._id || ''\n        }\n      };\n    } else if (isAssetStub(source)) {\n      image = {\n        asset: {\n          _ref: urlToId(source.asset.url)\n        }\n      };\n    } else if (typeof source.asset === 'object') {\n      image = source;\n    } else {\n      return null;\n    }\n    var img = source;\n    if (img.crop) {\n      image.crop = img.crop;\n    }\n    if (img.hotspot) {\n      image.hotspot = img.hotspot;\n    }\n    return applyDefaults(image);\n  }\n  function isUrl(url) {\n    return /^https?:\\/\\//.test(\"\" + url);\n  }\n  function urlToId(url) {\n    var parts = url.split('/').slice(-1);\n    return (\"image-\" + parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n  }\n  function applyDefaults(image) {\n    if (image.crop && image.hotspot) {\n      return image;\n    }\n    var result = _extends({}, image);\n    if (!result.crop) {\n      result.crop = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0\n      };\n    }\n    if (!result.hotspot) {\n      result.hotspot = {\n        x: 0.5,\n        y: 0.5,\n        height: 1.0,\n        width: 1.0\n      };\n    }\n    return result;\n  }\n  var SPEC_NAME_TO_URL_NAME_MAPPINGS = [['width', 'w'], ['height', 'h'], ['format', 'fm'], ['download', 'dl'], ['blur', 'blur'], ['sharpen', 'sharp'], ['invert', 'invert'], ['orientation', 'or'], ['minHeight', 'min-h'], ['maxHeight', 'max-h'], ['minWidth', 'min-w'], ['maxWidth', 'max-w'], ['quality', 'q'], ['fit', 'fit'], ['crop', 'crop'], ['saturation', 'sat'], ['auto', 'auto'], ['dpr', 'dpr'], ['pad', 'pad']];\n  function urlForImage(options) {\n    var spec = _extends({}, options || {});\n    var source = spec.source;\n    delete spec.source;\n    var image = parseSource(source);\n    if (!image) {\n      return null;\n    }\n    var id = image.asset._ref || image.asset._id || '';\n    var asset = parseAssetId(id);\n    var cropLeft = Math.round(image.crop.left * asset.width);\n    var cropTop = Math.round(image.crop.top * asset.height);\n    var crop = {\n      left: cropLeft,\n      top: cropTop,\n      width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n      height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop)\n    };\n    var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n    var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n    var hotSpotCenterX = image.hotspot.x * asset.width;\n    var hotSpotCenterY = image.hotspot.y * asset.height;\n    var hotspot = {\n      left: hotSpotCenterX - hotSpotHorizontalRadius,\n      top: hotSpotCenterY - hotSpotVerticalRadius,\n      right: hotSpotCenterX + hotSpotHorizontalRadius,\n      bottom: hotSpotCenterY + hotSpotVerticalRadius\n    };\n    if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n      spec = _extends(_extends({}, spec), fit({\n        crop: crop,\n        hotspot: hotspot\n      }, spec));\n    }\n    return specToImageUrl(_extends(_extends({}, spec), {}, {\n      asset: asset\n    }));\n  }\n  function specToImageUrl(spec) {\n    var cdnUrl = spec.baseUrl || 'https://cdn.sanity.io';\n    var filename = spec.asset.id + \"-\" + spec.asset.width + \"x\" + spec.asset.height + \".\" + spec.asset.format;\n    var baseUrl = cdnUrl + \"/images/\" + spec.projectId + \"/\" + spec.dataset + \"/\" + filename;\n    var params = [];\n    if (spec.rect) {\n      var _spec$rect = spec.rect,\n        left = _spec$rect.left,\n        top = _spec$rect.top,\n        width = _spec$rect.width,\n        height = _spec$rect.height;\n      var isEffectiveCrop = left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width;\n      if (isEffectiveCrop) {\n        params.push(\"rect=\" + left + \",\" + top + \",\" + width + \",\" + height);\n      }\n    }\n    if (spec.bg) {\n      params.push(\"bg=\" + spec.bg);\n    }\n    if (spec.focalPoint) {\n      params.push(\"fp-x=\" + spec.focalPoint.x);\n      params.push(\"fp-y=\" + spec.focalPoint.y);\n    }\n    var flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('');\n    if (flip) {\n      params.push(\"flip=\" + flip);\n    }\n    SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n      var specName = mapping[0],\n        param = mapping[1];\n      if (typeof spec[specName] !== 'undefined') {\n        params.push(param + \"=\" + encodeURIComponent(spec[specName]));\n      } else if (typeof spec[param] !== 'undefined') {\n        params.push(param + \"=\" + encodeURIComponent(spec[param]));\n      }\n    });\n    if (params.length === 0) {\n      return baseUrl;\n    }\n    return baseUrl + \"?\" + params.join('&');\n  }\n  function fit(source, spec) {\n    var cropRect;\n    var imgWidth = spec.width;\n    var imgHeight = spec.height;\n    if (!(imgWidth && imgHeight)) {\n      return {\n        width: imgWidth,\n        height: imgHeight,\n        rect: source.crop\n      };\n    }\n    var crop = source.crop;\n    var hotspot = source.hotspot;\n    var desiredAspectRatio = imgWidth / imgHeight;\n    var cropAspectRatio = crop.width / crop.height;\n    if (cropAspectRatio > desiredAspectRatio) {\n      var height = crop.height;\n      var width = height * desiredAspectRatio;\n      var top = crop.top;\n      var hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left;\n      var left = hotspotXCenter - width / 2;\n      if (left < crop.left) {\n        left = crop.left;\n      } else if (left + width > crop.left + crop.width) {\n        left = crop.left + crop.width - width;\n      }\n      cropRect = {\n        left: Math.round(left),\n        top: Math.round(top),\n        width: Math.round(width),\n        height: Math.round(height)\n      };\n    } else {\n      var _width = crop.width;\n      var _height = _width / desiredAspectRatio;\n      var _left = crop.left;\n      var hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top;\n      var _top = hotspotYCenter - _height / 2;\n      if (_top < crop.top) {\n        _top = crop.top;\n      } else if (_top + _height > crop.top + crop.height) {\n        _top = crop.top + crop.height - _height;\n      }\n      cropRect = {\n        left: Math.max(0, Math.floor(_left)),\n        top: Math.max(0, Math.floor(_top)),\n        width: Math.round(_width),\n        height: Math.round(_height)\n      };\n    }\n    return {\n      width: imgWidth,\n      height: imgHeight,\n      rect: cropRect\n    };\n  }\n  var validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\n  var validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\n  var validAutoModes = ['format'];\n  function isSanityClientLike(client) {\n    return client ? typeof client.clientConfig === 'object' : false;\n  }\n  function rewriteSpecName(key) {\n    var specs = SPEC_NAME_TO_URL_NAME_MAPPINGS;\n    for (var _iterator = _createForOfIteratorHelperLoose(specs), _step; !(_step = _iterator()).done;) {\n      var entry = _step.value;\n      var specName = entry[0],\n        param = entry[1];\n      if (key === specName || key === param) {\n        return specName;\n      }\n    }\n    return key;\n  }\n  function urlBuilder(options) {\n    var client = options;\n    if (isSanityClientLike(client)) {\n      var _client$clientConfig = client.clientConfig,\n        apiUrl = _client$clientConfig.apiHost,\n        projectId = _client$clientConfig.projectId,\n        dataset = _client$clientConfig.dataset;\n      var apiHost = apiUrl || 'https://api.sanity.io';\n      return new ImageUrlBuilder(null, {\n        baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n        projectId: projectId,\n        dataset: dataset\n      });\n    }\n    return new ImageUrlBuilder(null, options);\n  }\n  var ImageUrlBuilder = /*#__PURE__*/function () {\n    function ImageUrlBuilder(parent, options) {\n      this.options = parent ? _extends(_extends({}, parent.options || {}), options || {}) : _extends({}, options || {});\n    }\n    var _proto = ImageUrlBuilder.prototype;\n    _proto.withOptions = function withOptions(options) {\n      var baseUrl = options.baseUrl || this.options.baseUrl;\n      var newOptions = {\n        baseUrl: baseUrl\n      };\n      for (var key in options) {\n        if (options.hasOwnProperty(key)) {\n          var specKey = rewriteSpecName(key);\n          newOptions[specKey] = options[key];\n        }\n      }\n      return new ImageUrlBuilder(this, _extends({\n        baseUrl: baseUrl\n      }, newOptions));\n    };\n    _proto.image = function image(source) {\n      return this.withOptions({\n        source: source\n      });\n    };\n    _proto.dataset = function dataset(_dataset) {\n      return this.withOptions({\n        dataset: _dataset\n      });\n    };\n    _proto.projectId = function projectId(_projectId) {\n      return this.withOptions({\n        projectId: _projectId\n      });\n    };\n    _proto.bg = function bg(_bg) {\n      return this.withOptions({\n        bg: _bg\n      });\n    };\n    _proto.dpr = function dpr(_dpr) {\n      return this.withOptions({\n        dpr: _dpr\n      });\n    };\n    _proto.width = function width(_width) {\n      return this.withOptions({\n        width: _width\n      });\n    };\n    _proto.height = function height(_height) {\n      return this.withOptions({\n        height: _height\n      });\n    };\n    _proto.focalPoint = function focalPoint(x, y) {\n      return this.withOptions({\n        focalPoint: {\n          x: x,\n          y: y\n        }\n      });\n    };\n    _proto.maxWidth = function maxWidth(_maxWidth) {\n      return this.withOptions({\n        maxWidth: _maxWidth\n      });\n    };\n    _proto.minWidth = function minWidth(_minWidth) {\n      return this.withOptions({\n        minWidth: _minWidth\n      });\n    };\n    _proto.maxHeight = function maxHeight(_maxHeight) {\n      return this.withOptions({\n        maxHeight: _maxHeight\n      });\n    };\n    _proto.minHeight = function minHeight(_minHeight) {\n      return this.withOptions({\n        minHeight: _minHeight\n      });\n    };\n    _proto.size = function size(width, height) {\n      return this.withOptions({\n        width: width,\n        height: height\n      });\n    };\n    _proto.blur = function blur(_blur) {\n      return this.withOptions({\n        blur: _blur\n      });\n    };\n    _proto.sharpen = function sharpen(_sharpen) {\n      return this.withOptions({\n        sharpen: _sharpen\n      });\n    };\n    _proto.rect = function rect(left, top, width, height) {\n      return this.withOptions({\n        rect: {\n          left: left,\n          top: top,\n          width: width,\n          height: height\n        }\n      });\n    };\n    _proto.format = function format(_format) {\n      return this.withOptions({\n        format: _format\n      });\n    };\n    _proto.invert = function invert(_invert) {\n      return this.withOptions({\n        invert: _invert\n      });\n    };\n    _proto.orientation = function orientation(_orientation) {\n      return this.withOptions({\n        orientation: _orientation\n      });\n    };\n    _proto.quality = function quality(_quality) {\n      return this.withOptions({\n        quality: _quality\n      });\n    };\n    _proto.forceDownload = function forceDownload(download) {\n      return this.withOptions({\n        download: download\n      });\n    };\n    _proto.flipHorizontal = function flipHorizontal() {\n      return this.withOptions({\n        flipHorizontal: true\n      });\n    };\n    _proto.flipVertical = function flipVertical() {\n      return this.withOptions({\n        flipVertical: true\n      });\n    };\n    _proto.ignoreImageParams = function ignoreImageParams() {\n      return this.withOptions({\n        ignoreImageParams: true\n      });\n    };\n    _proto.fit = function fit(value) {\n      if (validFits.indexOf(value) === -1) {\n        throw new Error(\"Invalid fit mode \\\"\" + value + \"\\\"\");\n      }\n      return this.withOptions({\n        fit: value\n      });\n    };\n    _proto.crop = function crop(value) {\n      if (validCrops.indexOf(value) === -1) {\n        throw new Error(\"Invalid crop mode \\\"\" + value + \"\\\"\");\n      }\n      return this.withOptions({\n        crop: value\n      });\n    };\n    _proto.saturation = function saturation(_saturation) {\n      return this.withOptions({\n        saturation: _saturation\n      });\n    };\n    _proto.auto = function auto(value) {\n      if (validAutoModes.indexOf(value) === -1) {\n        throw new Error(\"Invalid auto mode \\\"\" + value + \"\\\"\");\n      }\n      return this.withOptions({\n        auto: value\n      });\n    };\n    _proto.pad = function pad(_pad) {\n      return this.withOptions({\n        pad: _pad\n      });\n    };\n    _proto.url = function url() {\n      return urlForImage(this.options);\n    };\n    _proto.toString = function toString() {\n      return this.url();\n    };\n    return ImageUrlBuilder;\n  }();\n  return urlBuilder;\n});","map":{"version":3,"names":["example","parseAssetId","ref","split","id","_ref$split","dimensionString","format","Error","imgWidthStr","_dimensionString$spli","imgHeightStr","width","height","isValidAssetId","isFinite","isRef","src","source","_ref","isAsset","_id","isAssetStub","asset","url","parseSource","image","isUrl","urlToId","img","crop","hotspot","applyDefaults","test","parts","slice","replace","result","_extends","left","top","bottom","right","x","y","SPEC_NAME_TO_URL_NAME_MAPPINGS","urlForImage","options","spec","cropLeft","Math","round","cropTop","hotSpotVerticalRadius","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","rect","focalPoint","ignoreImageParams","fit","specToImageUrl","cdnUrl","baseUrl","filename","projectId","dataset","params","_spec$rect","isEffectiveCrop","push","bg","flip","flipHorizontal","flipVertical","filter","Boolean","join","forEach","mapping","specName","param","encodeURIComponent","length","cropRect","imgWidth","imgHeight","desiredAspectRatio","cropAspectRatio","hotspotXCenter","_width","_height","_left","hotspotYCenter","_top","max","floor","validFits","validCrops","validAutoModes","isSanityClientLike","client","clientConfig","rewriteSpecName","key","specs","_iterator","_createForOfIteratorHelperLoose","_step","done","entry","value","urlBuilder","_client$clientConfig","apiUrl","apiHost","ImageUrlBuilder","parent","_proto","prototype","withOptions","newOptions","hasOwnProperty","specKey","_dataset","_projectId","_bg","dpr","_dpr","maxWidth","_maxWidth","minWidth","_minWidth","maxHeight","_maxHeight","minHeight","_minHeight","size","blur","_blur","sharpen","_sharpen","_format","invert","_invert","orientation","_orientation","quality","_quality","forceDownload","download","indexOf","saturation","_saturation","auto","pad","_pad","toString"],"sources":["C:\\Projects\\seattle-community-fridge\\node_modules\\@sanity\\block-content-to-hyperscript\\node_modules\\@sanity\\image-url\\src\\parseAssetId.ts","C:\\Projects\\seattle-community-fridge\\node_modules\\@sanity\\block-content-to-hyperscript\\node_modules\\@sanity\\image-url\\src\\parseSource.ts","C:\\Projects\\seattle-community-fridge\\node_modules\\@sanity\\block-content-to-hyperscript\\node_modules\\@sanity\\image-url\\src\\urlForImage.ts","C:\\Projects\\seattle-community-fridge\\node_modules\\@sanity\\block-content-to-hyperscript\\node_modules\\@sanity\\image-url\\src\\builder.ts"],"sourcesContent":["const example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg'\n\nexport default function parseAssetId(ref: string) {\n  const [, id, dimensionString, format] = ref.split('-')\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  const [imgWidthStr, imgHeightStr] = dimensionString.split('x')\n\n  const width = +imgWidthStr\n  const height = +imgHeightStr\n\n  const isValidAssetId = isFinite(width) && isFinite(height)\n  if (!isValidAssetId) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  return {id, width, height, format}\n}\n","import {\n  SanityAsset,\n  SanityImageObject,\n  SanityImageSource,\n  SanityImageWithAssetStub,\n  SanityReference,\n} from './types'\n\nconst isRef = (src: SanityImageSource): src is SanityReference => {\n  const source = src as SanityReference\n  return source ? typeof source._ref === 'string' : false\n}\n\nconst isAsset = (src: SanityImageSource): src is SanityAsset => {\n  const source = src as SanityAsset\n  return source ? typeof source._id === 'string' : false\n}\n\nconst isAssetStub = (src: SanityImageSource): src is SanityImageWithAssetStub => {\n  const source = src as SanityImageWithAssetStub\n  return source && source.asset ? typeof source.asset.url === 'string' : false\n}\n\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nexport default function parseSource(source?: SanityImageSource) {\n  if (!source) {\n    return null\n  }\n\n  let image: SanityImageObject\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {_ref: urlToId(source)},\n    }\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {_ref: source},\n    }\n  } else if (isRef(source)) {\n    // We just got passed an asset directly\n    image = {\n      asset: source,\n    }\n  } else if (isAsset(source)) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id || '',\n      },\n    }\n  } else if (isAssetStub(source)) {\n    // If we were passed a partial asset (`url`, but no `_id`)\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url),\n      },\n    }\n  } else if (typeof source.asset === 'object') {\n    // Probably an actual image with materialized asset\n    image = source\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null\n  }\n\n  const img = source as SanityImageObject\n  if (img.crop) {\n    image.crop = img.crop\n  }\n\n  if (img.hotspot) {\n    image.hotspot = img.hotspot\n  }\n\n  return applyDefaults(image)\n}\n\nfunction isUrl(url: string) {\n  return /^https?:\\/\\//.test(`${url}`)\n}\n\nfunction urlToId(url: string) {\n  const parts = url.split('/').slice(-1)\n  return `image-${parts[0]}`.replace(/\\.([a-z]+)$/, '-$1')\n}\n\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image: SanityImageObject) {\n  if (image.crop && image.hotspot) {\n    return image as Required<SanityImageObject>\n  }\n\n  // We need to pad in default values for crop or hotspot\n  const result = {...image}\n\n  if (!result.crop) {\n    result.crop = {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0,\n    }\n  }\n\n  if (!result.hotspot) {\n    result.hotspot = {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0,\n    }\n  }\n\n  return result as Required<SanityImageObject>\n}\n","import parseAssetId from './parseAssetId'\nimport parseSource from './parseSource'\nimport {\n  CropSpec,\n  HotspotSpec,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAsset,\n  SanityAsset,\n  SanityImageFitResult,\n  SanityImageRect,\n  SanityReference,\n} from './types'\n\nexport const SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n  ['width', 'w'],\n  ['height', 'h'],\n  ['format', 'fm'],\n  ['download', 'dl'],\n  ['blur', 'blur'],\n  ['sharpen', 'sharp'],\n  ['invert', 'invert'],\n  ['orientation', 'or'],\n  ['minHeight', 'min-h'],\n  ['maxHeight', 'max-h'],\n  ['minWidth', 'min-w'],\n  ['maxWidth', 'max-w'],\n  ['quality', 'q'],\n  ['fit', 'fit'],\n  ['crop', 'crop'],\n  ['saturation', 'sat'],\n  ['auto', 'auto'],\n  ['dpr', 'dpr'],\n  ['pad', 'pad'],\n]\n\nexport default function urlForImage(options: ImageUrlBuilderOptions) {\n  let spec = {...(options || {})}\n  const source = spec.source\n  delete spec.source\n\n  const image = parseSource(source)\n  if (!image) {\n    return null\n  }\n\n  const id = (image.asset as SanityReference)._ref || (image.asset as SanityAsset)._id || ''\n  const asset = parseAssetId(id)\n\n  // Compute crop rect in terms of pixel coordinates in the raw source image\n  const cropLeft = Math.round(image.crop.left * asset.width)\n  const cropTop = Math.round(image.crop.top * asset.height)\n  const crop = {\n    left: cropLeft,\n    top: cropTop,\n    width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n    height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop),\n  }\n\n  // Compute hot spot rect in terms of pixel coordinates\n  const hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2\n  const hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2\n  const hotSpotCenterX = image.hotspot.x * asset.width\n  const hotSpotCenterY = image.hotspot.y * asset.height\n  const hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius,\n  }\n\n  // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = {...spec, ...fit({crop, hotspot}, spec)}\n  }\n\n  return specToImageUrl({...spec, asset})\n}\n\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec: ImageUrlBuilderOptionsWithAsset) {\n  const cdnUrl = spec.baseUrl || 'https://cdn.sanity.io'\n  const filename = `${spec.asset.id}-${spec.asset.width}x${spec.asset.height}.${spec.asset.format}`\n  const baseUrl = `${cdnUrl}/images/${spec.projectId}/${spec.dataset}/${filename}`\n\n  const params = []\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    const {left, top, width, height} = spec.rect\n    const isEffectiveCrop =\n      left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width\n\n    if (isEffectiveCrop) {\n      params.push(`rect=${left},${top},${width},${height}`)\n    }\n  }\n\n  if (spec.bg) {\n    params.push(`bg=${spec.bg}`)\n  }\n\n  if (spec.focalPoint) {\n    params.push(`fp-x=${spec.focalPoint.x}`)\n    params.push(`fp-y=${spec.focalPoint.y}`)\n  }\n\n  const flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('')\n  if (flip) {\n    params.push(`flip=${flip}`)\n  }\n\n  // Map from spec name to url param name, and allow using the actual param name as an alternative\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach((mapping) => {\n    const [specName, param] = mapping\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[specName])}`)\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[param])}`)\n    }\n  })\n\n  if (params.length === 0) {\n    return baseUrl\n  }\n\n  return `${baseUrl}?${params.join('&')}`\n}\n\nfunction fit(\n  source: {crop: CropSpec; hotspot: HotspotSpec},\n  spec: ImageUrlBuilderOptions\n): SanityImageFitResult {\n  let cropRect: SanityImageRect\n\n  const imgWidth = spec.width\n  const imgHeight = spec.height\n\n  // If we are not constraining the aspect ratio, we'll just use the whole crop\n  if (!(imgWidth && imgHeight)) {\n    return {width: imgWidth, height: imgHeight, rect: source.crop}\n  }\n\n  const crop = source.crop\n  const hotspot = source.hotspot\n\n  // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n  const desiredAspectRatio = imgWidth / imgHeight\n  const cropAspectRatio = crop.width / crop.height\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    const height = crop.height\n    const width = height * desiredAspectRatio\n    const top = crop.top\n\n    // Center output horizontally over hotspot\n    const hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left\n    let left = hotspotXCenter - width / 2\n\n    // Keep output within crop\n    if (left < crop.left) {\n      left = crop.left\n    } else if (left + width > crop.left + crop.width) {\n      left = crop.left + crop.width - width\n    }\n\n    cropRect = {\n      left: Math.round(left),\n      top: Math.round(top),\n      width: Math.round(width),\n      height: Math.round(height),\n    }\n  } else {\n    // The crop is taller than the desired ratio, we are cutting from top and bottom\n    const width = crop.width\n    const height = width / desiredAspectRatio\n    const left = crop.left\n\n    // Center output vertically over hotspot\n    const hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top\n    let top = hotspotYCenter - height / 2\n\n    // Keep output rect within crop\n    if (top < crop.top) {\n      top = crop.top\n    } else if (top + height > crop.top + crop.height) {\n      top = crop.top + crop.height - height\n    }\n\n    cropRect = {\n      left: Math.max(0, Math.floor(left)),\n      top: Math.max(0, Math.floor(top)),\n      width: Math.round(width),\n      height: Math.round(height),\n    }\n  }\n\n  return {\n    width: imgWidth,\n    height: imgHeight,\n    rect: cropRect,\n  }\n}\n\n// For backwards-compatibility\nexport {parseSource}\n","import {\n  AutoMode,\n  CropMode,\n  FitMode,\n  ImageFormat,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAliases,\n  Orientation,\n  SanityClientLike,\n  SanityImageSource,\n  SanityProjectDetails,\n} from './types'\nimport urlForImage, {SPEC_NAME_TO_URL_NAME_MAPPINGS} from './urlForImage'\n\nconst validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min']\nconst validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy']\nconst validAutoModes = ['format']\n\nfunction isSanityClientLike(client?: SanityClientLike): client is SanityClientLike {\n  return client ? typeof client.clientConfig === 'object' : false\n}\n\nfunction rewriteSpecName(key: string) {\n  const specs = SPEC_NAME_TO_URL_NAME_MAPPINGS\n  for (const entry of specs) {\n    const [specName, param] = entry\n    if (key === specName || key === param) {\n      return specName\n    }\n  }\n\n  return key\n}\n\nexport default function urlBuilder(options?: SanityClientLike | SanityProjectDetails) {\n  // Did we get a SanityClient?\n  const client = options as SanityClientLike\n  if (isSanityClientLike(client)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = client.clientConfig\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Or just accept the options as given\n  return new ImageUrlBuilder(null, options as ImageUrlBuilderOptions)\n}\n\nexport class ImageUrlBuilder {\n  public options: ImageUrlBuilderOptions\n\n  constructor(parent: ImageUrlBuilder | null, options: ImageUrlBuilderOptions) {\n    this.options = parent\n      ? {...(parent.options || {}), ...(options || {})} // Merge parent options\n      : {...(options || {})} // Copy options\n  }\n\n  withOptions(options: Partial<ImageUrlBuilderOptionsWithAliases>) {\n    const baseUrl = options.baseUrl || this.options.baseUrl\n\n    const newOptions: {[key: string]: any} = {baseUrl}\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        const specKey = rewriteSpecName(key)\n        newOptions[specKey] = options[key]\n      }\n    }\n\n    return new ImageUrlBuilder(this, {baseUrl, ...newOptions})\n  }\n\n  // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n  // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n  // studio, the 'image'-document must be provided.\n  image(source: SanityImageSource) {\n    return this.withOptions({source})\n  }\n\n  // Specify the dataset\n  dataset(dataset: string) {\n    return this.withOptions({dataset})\n  }\n\n  // Specify the projectId\n  projectId(projectId: string) {\n    return this.withOptions({projectId})\n  }\n\n  // Specify background color\n  bg(bg: string) {\n    return this.withOptions({bg})\n  }\n\n  // Set DPR scaling factor\n  dpr(dpr: number) {\n    return this.withOptions({dpr})\n  }\n\n  // Specify the width of the image in pixels\n  width(width: number) {\n    return this.withOptions({width})\n  }\n\n  // Specify the height of the image in pixels\n  height(height: number) {\n    return this.withOptions({height})\n  }\n\n  // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n  focalPoint(x: number, y: number) {\n    return this.withOptions({focalPoint: {x, y}})\n  }\n\n  maxWidth(maxWidth: number) {\n    return this.withOptions({maxWidth})\n  }\n\n  minWidth(minWidth: number) {\n    return this.withOptions({minWidth})\n  }\n\n  maxHeight(maxHeight: number) {\n    return this.withOptions({maxHeight})\n  }\n\n  minHeight(minHeight: number) {\n    return this.withOptions({minHeight})\n  }\n\n  // Specify width and height in pixels\n  size(width: number, height: number) {\n    return this.withOptions({width, height})\n  }\n\n  // Specify blur between 0 and 100\n  blur(blur: number) {\n    return this.withOptions({blur})\n  }\n\n  sharpen(sharpen: number) {\n    return this.withOptions({sharpen})\n  }\n\n  // Specify the desired rectangle of the image\n  rect(left: number, top: number, width: number, height: number) {\n    return this.withOptions({rect: {left, top, width, height}})\n  }\n\n  // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n  format(format: ImageFormat) {\n    return this.withOptions({format})\n  }\n\n  invert(invert: boolean) {\n    return this.withOptions({invert})\n  }\n\n  // Rotation in degrees 0, 90, 180, 270\n  orientation(orientation: Orientation) {\n    return this.withOptions({orientation})\n  }\n\n  // Compression quality 0-100\n  quality(quality: number) {\n    return this.withOptions({quality})\n  }\n\n  // Make it a download link. Parameter is default filename.\n  forceDownload(download: boolean | string) {\n    return this.withOptions({download})\n  }\n\n  // Flip image horizontally\n  flipHorizontal() {\n    return this.withOptions({flipHorizontal: true})\n  }\n\n  // Flip image vertically\n  flipVertical() {\n    return this.withOptions({flipVertical: true})\n  }\n\n  // Ignore crop/hotspot from image record, even when present\n  ignoreImageParams() {\n    return this.withOptions({ignoreImageParams: true})\n  }\n\n  fit(value: FitMode) {\n    if (validFits.indexOf(value) === -1) {\n      throw new Error(`Invalid fit mode \"${value}\"`)\n    }\n\n    return this.withOptions({fit: value})\n  }\n\n  crop(value: CropMode) {\n    if (validCrops.indexOf(value) === -1) {\n      throw new Error(`Invalid crop mode \"${value}\"`)\n    }\n\n    return this.withOptions({crop: value})\n  }\n\n  // Saturation\n  saturation(saturation: number) {\n    return this.withOptions({saturation})\n  }\n\n  auto(value: AutoMode) {\n    if (validAutoModes.indexOf(value) === -1) {\n      throw new Error(`Invalid auto mode \"${value}\"`)\n    }\n\n    return this.withOptions({auto: value})\n  }\n\n  // Specify the number of pixels to pad the image\n  pad(pad: number) {\n    return this.withOptions({pad})\n  }\n\n  // Gets the url based on the submitted parameters\n  url() {\n    return urlForImage(this.options)\n  }\n\n  // Alias for url()\n  toString() {\n    return this.url()\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}